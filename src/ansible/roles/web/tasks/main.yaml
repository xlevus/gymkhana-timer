---
- name: Caddy Dir
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0700
  with_items: 
    - /etc/caddy
    - /etc/gk
    - /var/gk/web
    - /var/gk/web/media
    - /var/gk/web/static

- name: Secrets
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: 0600
    decrypt: true
  with_items:
    - {src: web.SECRET_KEY, dst: /etc/gk/web.SECRET_KEY}

- name: Caddyfile
  ansible.builtin.template:
    src: Caddyfile.j2
    dest: /etc/caddy/Caddyfile

- name: Network
  community.docker.docker_network:
    name: web
    
- name: Run Caddy
  community.docker.docker_container:
    name: caddy
    image: caddy:latest
    state: started
    restart: true
    restart_policy: always
    pull: always
    networks: 
      - name: web
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - "/etc/caddy:/etc/caddy"
      - "/var/gk/web/media:/var/gk/web/media"
      - "/var/gk/web/static:/var/gk/web/static"

- name: Run App
  community.docker.docker_container:
    name: web
    image: ghcr.io/xlevus/gymkhana/web:latest
    state: started
    pull: always
    restart: true
    volumes:
      - "/etc/gk/web.SECRET_KEY:/etc/SECRET_KEY"
      - "/var/gk/web:/data"
    networks: 
      - name: web
    env:
      DEBUG: "False"
      ALLOWED_HOSTS: "{{ hostnames|join(',') }}"
      CSRF_TRUSTED_ORIGINS: "{{ hostnames | map('ansible.builtin.regex_replace', '^', 'https://') | join(',') }}"
      DATABASE_URL: "sqlite:///data/db.sqlite"
      SECRET_KEY_FILE: "/etc/SECRET_KEY"
      STATIC_ROOT: "/data/static"
      MEDIA_ROOT: "/data/media"
      MEDIA_URL: "/media/"
